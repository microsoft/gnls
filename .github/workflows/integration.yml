name: Integration
on:
  push: {branches: [main]}
  pull_request: {branches: [main]}
jobs:
  validate:
    name: Validate
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: '*'
          cache: npm
      - name: Install Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Install VisualStudio
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64
      - name: Install Tools
        run: |
          case "$RUNNER_OS" in
            Linux)
              sudo apt update
              sudo apt install -y ninja-build clang-tidy-12
              for name in clang clang++ clang-format; do
                sudo update-alternatives --remove-all $name
              done
              for name in clang clang++ clang-format clang-tidy; do
                sudo update-alternatives --install /usr/bin/$name $name /usr/bin/$name-12 100
              done
              ;;
            macOS)
              brew install ninja llvm
              echo "$(brew --prefix llvm)/bin" >> $GITHUB_PATH
              ;;
            Windows)
              choco install ninja
              ;;
            *)
              echo "Unknown OS: $RUNNER_OS"
              exit 1
              ;;
          esac
      - name: Setup Cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-${{ hashFiles('addon/deps.json') }}
          path: addon/gn
      - name: Prepare Dependencies
        run: npm ci
      - name: Build Debug
        run: npm run debug
      - name: Run Test
        run: npm test
      - name: Build Release
        run: npm run build
      - name: Upload Archive
        uses: actions/upload-artifact@v3
        if: ${{ runner.os == 'Linux' }}
        with:
          name: archive
          path: |
            README.md
            CHANGELOG.md
            LICENSE
            package.json
            build
            !build/*.node
      - name: Upload Addons
        uses: actions/upload-artifact@v3
        with:
          name: addons
          path: build/*.node
  build:
    name: Build
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - name: Download Archive
        uses: actions/download-artifact@v3
        with:
          name: archive
          path: .
      - name: Download Addons
        uses: actions/download-artifact@v3
        with:
          name: addons
          path: build
      - name: Generate Packages
        run: npx vsce package --out gnls.vsix
      - name: Upload Packages
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: gnls.vsix
