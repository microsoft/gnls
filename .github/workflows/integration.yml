name: Integration
on:
  push: {branches: [main]}
  pull_request: {branches: [main]}
jobs:
  validate:
    name: Validate
    strategy:
      matrix:
        runner: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.runner }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Install Pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: latest
          check-latest: true
          cache: pnpm
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x
          check-latest: true
      - name: Install VisualStudio
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64
      - name: Install Tools
        run: |
          addpath() { export PATH="$1:$PATH" && echo "$1" >> $GITHUB_PATH ; }
          case "$RUNNER_OS" in
            Linux)
              sudo apt update
              sudo apt install -y ninja-build
              ;;
            macOS)
              brew install llvm@18 ninja
              addpath "$(brew --prefix llvm@18)/bin"
              ;;
            Windows)
              choco install ninja
              ;;
            *)
              echo "Unknown OS: $RUNNER_OS"
              exit 1
              ;;
          esac
      - name: Check Environment
        run: |
          trace() { echo "::group::$@" && "$@" && echo "::endgroup::" ; }
          trace node --version
          trace python --version
          trace clang --version
          trace clang++ --version
          trace clang-format --version
          trace clang-tidy --version
          trace ninja --version
      - name: Setup Cache
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-${{ hashFiles('addon/deps.json') }}
          path: addon/gn
      - name: Prepare Dependencies
        run: pnpm install --frozen-lockfile
      - name: Build Debug
        run: pnpm debug
      - name: Run Test
        run: pnpm test
      - name: Build Release
        run: pnpm build
      - name: Upload Archive
        uses: actions/upload-artifact@v4
        if: ${{ matrix.runner == 'ubuntu-latest' }}
        with:
          name: archive-${{ matrix.runner }}
          path: |
            README.md
            CHANGELOG.md
            LICENSE
            package.json
            build
            !build/*.node
      - name: Upload Addons
        uses: actions/upload-artifact@v4
        with:
          name: addons-${{ matrix.runner }}
          path: build/*.node
  build:
    name: Build
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - name: Install Tools
        run: npm install --global @vscode/vsce
      - name: Download Archive
        uses: actions/download-artifact@v4
        with:
          pattern: archive-*
          path: .
          merge-multiple: true
      - name: Download Addons
        uses: actions/download-artifact@v4
        with:
          pattern: addons-*
          path: build
          merge-multiple: true
      - name: Generate Package
        run: vsce package --out gnls.vsix
      - name: Upload Package
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: gnls.vsix
  publish:
    name: Publish
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Install Tools
        run: npm install --global @vscode/vsce
      - name: Download Package
        uses: actions/download-artifact@v4
        with:
          name: package
          path: .
      - name: Publish Package
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
        run: vsce publish --skip-duplicate --packagePath gnls.vsix
